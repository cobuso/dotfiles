set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

if $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

" Let Vundle manage Vundle (required)
Bundle 'gmarik/vundle'
" My bundles
Bundle 'tpope/vim-fugitive'
Bundle 'mileszs/ack.vim'
Bundle 'altercation/vim-colors-solarized'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'scrooloose/nerdcommenter'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'
Bundle 'vim-scripts/YankRing.vim'
Bundle 'mattn/emmet-vim'
Bundle 'vimwiki'
Bundle 'joonty/vdebug.git'
Bundle 'kchmck/vim-coffee-script'
Bundle 'groenewege/vim-less'
Bundle 'editorconfig/editorconfig-vim'
Bundle 'ctrlpvim/ctrlp.vim'

syntax on
filetype plugin indent on

" Tabs and Spaces
set ts=2 sts=2 sw=2 expandtab

" Basics
set encoding=utf-8
set modelines=0
set autoindent
set showmode
set showcmd
set hidden
set visualbell
set ttyfast
set ruler
set backspace=indent,eol,start
set relativenumber
set laststatus=2
set history=1000
set cursorline
set splitbelow
set splitright
set shiftround
set synmaxcol=1000
set scrolloff=3

"" Wildmenu
set wildmenu
set wildmode=list:longest
set wildignore+=.git
set wildignore+=*.jpg,*.bmp,*.gid,*.png,*.jpeg
set wildignore+=.DS_Store

" Time out on key codes but not mappings
set notimeout
set ttimeout
set ttimeoutlen=10
                                              
" Backups/ Swap file locations
set backup
set noswapfile
set undodir=~/.vim/tmp/undo//
set backupdir=~/.vim/tmp/backup//
set directory=~/.vim/tmp/swap//

" Use unnamed clipboard (for OSX copy/pasting)
set clipboard=unnamed

" Create above dirs if they don't already exist
if !isdirectory(expand(&undodir))
  call mkdir(expand(&undodir), "p")
endif
if !isdirectory(expand(&backupdir))
  call mkdir(expand(&backupdir), "p")
endif
if !isdirectory(expand(&directory))
  call mkdir(expand(&directory), "p")
endif

" remap to leader ,
let mapleader = ","

" Searches
"  - Sane regexes
nnoremap / /\v
vnoremap / /\v
set ignorecase    " Ignore case
set smartcase     " If one or more uppercase chars in search, search case-sens
set gdefault      " Default is substitutions globally on lines (g option)
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>

" Line wrapping
set nowrap
set textwidth=72
set formatoptions=qrn

" Use Textmate style invisibles
set nolist
set listchars=tab:▸\ ,eol:¬


" Make me do the Right Thing
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Move by visual lines rather than logical ones
nnoremap j gj
nnoremap k gk

" Time saver
nnoremap ; :

" Save when losing focus
au FocusLost * :wa

" Clean trailing whitespace
nnoremap <leader>w mz:%s/\s\+$//<cr>:let @/=''<cr>`z

" Ack
map <leader>a :Ack 

" Quick edit/reload .vimrc
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>sv :so $MYVIMRC<cr>

" Resize splits when window resized
au VimResized * :wincmd =

" Easy buffer navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <leader>w <C-w>v<C-w>l

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

" Yankring
let g:yankring_history_dir = '~/.vim/tmp/yankring'
nnoremap <silent> <F3> :YRShow<cr>
nnoremap <silent> <leader>y :YRShow<cr>

" <leader>v to re-select just pasted text
nnoremap <leader>v v`]

" Get back to normal mode from insert mode with jj 
inoremap jj <ESC>

" tpl files are essentially html
au BufNewFile,BufRead *.tpl set filetype=html

" color
set background=dark
colorscheme Tomorrow-Night

" Open up a browser window for PHP documentation
function OpenPHPManual(keyword)
  let url = 'http://www.php.net/' . a:keyword
  exec '!open "' . url . '"'
endfunction
noremap gd :call OpenPHPManual(expand('<cword>'))<CR>

" NERDTree
map <leader>n :NERDTreeToggle<CR>

" Syntastic
let g:syntastic_auto_loc_list=1   " Always open location list if errors detected
let g:syntastic_mode_map = { 'passive_filetypes': ['html','java'] }

" vimwiki
let g:vimwiki_list = [{'path' : "~/Dropbox/Wiki/", 'path_html' : '~/Dropbox/Wiki/HTML/'}]

" VDebug
let g:vdebug_options = { "path_maps": { "/Projects": "/Users/tom/Projects" } }

" CtrlP
set wildignore+="uploads"

